#'''
#Пользователь вводит с клавиатуры два числа, выполните следующие операции:
#1. Нужно показать все числа в указанном диапазоне. 
#2. Нужно показать все нечетные числа в указанном диапазоне. 
#3. Нужно показать все четные числа в указанном диапазоне. 
#4. Нужно показать все числа в указанном диапазоне в порядке убывания.
#'''

#num1 = int(input("Enter a num1 : "))
#num2 = int(input("Enter a num2 : "))

#print("1. Нужно показать все числа в указанном диапазоне. ")
#for elem in range(num1, num2):
#    print(elem)

#print("2. Нужно показать все нечетные числа в указанном диапазоне.")
#for elem in range(num1, num2):
#    if elem%2==1:
#        print(elem) 

#print("3. Нужно показать все четные числа в указанном диапазоне.")
#for elem in range(num1, num2):
#    if elem%2==0:
#        print(elem) 

#print("4. Нужно показать все числа в указанном диапазоне в порядке убывания.")
#for elem in range(num2, num1-1, -1):
#    print(elem)



'''
Задание №2.
Когда Павел учился в школе, он запоминал таблицу умножения прямоугольными блоками. 
Для тренировок ему бы очень пригодилась программа, которая показывала бы блок таблицы умножения.
Напишите программу, на вход которой даются четыре числа a, b, c и d, каждое в своей строке. 
Программа должна вывести фрагмент таблицы умножения для всех чисел отрезка [a; b] на все числа отрезка [c;d].
Числа a, b, c и d являются натуральными и не превосходят 10, a≤b, c≤d.
Следуйте формату вывода из примера, для разделения элементов внутри строки используйте '\t' — символ табуляции. 
Заметьте, что левым столбцом и верхней строкой выводятся сами числа из заданных отрезков — заголовочные столбец и строка таблицы.
'''

a = int(input("a : "))
b = int(input("b : "))
c = int(input("c : "))
d = int(input("d : "))

w = int(len(str(a*d)))
print("{:{}}".format(' ',w))
for i in range(c, d+1):
     print(f"{i:{w}}", end=' ')
print()


for i in range(a,b+1):
    print(i,end=': ')
    for j in range(c,d+1):
        print(f"{i*j :{w}}", end=' ')
    print()



