import math

'''
Из передачи “Здоровье” Аня узнала, что рекомендуется спать хотя бы A часов в сутки, но пересыпать 
тоже вредно и не стоит спать более B часов. Сейчас Аня спит H часов в сутки. Если режим сна Ани 
удовлетворяет рекомендациям передачи “Здоровье”, выведите “Это нормально”. Если Аня спит менее A часов, 
выведите “Недосып”, если же более B часов, то выведите “Пересып”.
Получаемое число A всегда меньше либо равно B.
На вход программе в три строки подаются переменные в следующем порядке: A, B, H.
Обратите внимание на регистр символов: вывод должен в точности соответствовать описанному в задании, 
т. е. если программа должна вывести "Пересып", выводы программы "пересып", "ПЕРЕСЫП", "ПеРеСыП" 
и другие не будут считаться верными.
Это первое не самое тривиальное задание на условное выражение. В случаях, когда разбить исполнение 
программы на несколько направлений, стоит внимательно обдумать все условия, которые нужно использовать. 
Особое внимание стоит уделить строгости используемых условных операторов. Для того, чтобы понимать, 
какой из них стоит использовать, внимательно прочитайте условие задания.
'''

print('Введите три значения ')
A = int(input(""))
B = int(input(""))
H = int(input(""))

if H < A:
    print("Недосып")
elif H > B:
    print("Пересып")
else:
    print("Это нормально")


'''
Требуется определить, является ли данный год високосным.
Напомним, что високосными годами считаются те годы, порядковый номер 
которых либо кратен 4, но при этом не кратен 100, либо кратен 400 
(например, 2000-й год являлся високосным, а 2100-й будет не високосным годом).
Программа должна корректно работать на числах 1900≤n≤3000.
Выведите "Високосный" в случае, если считанный год является високосным и 
"Обычный" в обратном случае (не забывайте проверять регистр выводимых программой символов).
'''

print("Введите год")
year = int(input(""))
if year%4==0 and (year%100!=0 or year%400==0):
    print("Високосный")
else:
    print("Обычный")

'''
Напишите программу, принимающую на вход целое число, которая выводит True, если переданное 
значение попадает в интервал (- 15,12]∪(14,17)∪[19,+∞) и False в противном случае 
(регистр символов имеет значение).
Обратите внимание на разные скобки, используемые для обозначения интервалов. 
В задании используются полуоткрытые и открытые интервалы
'''

print("(- 15,12]∪(14,17)∪[19,+∞)")
number = int(input(""))
if (-15 < number <= 12) or (14 < number < 17) or (number >= 19):
    print("True")
else:
    print("False")


'''
Жители страны Малевии часто экспериментируют с планировкой комнат.
Комнаты бывают треугольные, прямоугольные и круглые. Чтобы быстро 
вычислять жилплощадь, требуется написать программу, на вход которой 
подаётся тип фигуры комнаты и соответствующие параметры, которая бы 
выводила площадь получившейся комнаты.
Для числа π в стране Малевии используют значение 3.14.
'''

figure = input("Введите фигуру: ")
pi = 3.14

if figure == 'треугольник':
    a = int(input("a: "))
    b = int(input("b: "))
    c = int(input("c: "))
    p=(a+b+c)/2
    print(math.sqrt(p * (p - a) * (p - b) * (p - c)))
elif figure == 'прямоугольник':
    a = int(input("a: "))
    b = int(input("b: "))
    print(a*b)
elif figure == 'круг':
    r = int(input("r: "))
    print(math.pi * r**2)


'''
Задание №5.
В институте биоинформатики по офису передвигается робот. Недавно студенты из группы программистов 
написали для него программу, по которой робот, когда заходит в комнату, считает количество 
программистов в ней и произносит его вслух: "n программистов".
Для того, чтобы это звучало правильно, для каждого n нужно использовать верное окончание слова.
Напишите программу, считывающую с пользовательского ввода целое число n (неотрицательное), 
выводящее это число в консоль вместе с правильным образом изменённым словом "программист", 
для того, чтобы робот мог нормально общаться с людьми, например, 1 программист, 2 программиста, 5 программистов.
В комнате может быть очень много программистов. Проверьте, что ваша программа правильно обработает все случаи, 
как минимум до 1000 человек.
Если ваше решение не проходит какой-то тест, это значит, что вы не рассмотрели какой-то из случаев 
входных данных (число программистов 10000≤n≤1000). Обязательно проверяйте свои решения на дополнительных значениях,
а не только на тех, что приведены в условии задания.
'''

count = int(input("Введите количество программистов: "))

last = count%10
if count < 0:
    print("Отрицательное число")
elif last == 1:
    print(f"{count} программист")
elif last >= 2 and last <= 4:
    print(f"{count} программиста")
else:
    print(f"{count} программистов")


